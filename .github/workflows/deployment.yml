# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  generate-keys:
    name: Generate Keystore and Keys
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Generate Keys
      run: |
        # Replace this with the command or script to generate your keys
        # Example: keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000
        
        # Store generated keys as GitHub secrets
        echo "::set-env name=KEYSTORE_CONTENTS::$(cat my-release-key.keystore | base64 -w 0)"
        echo "::set-env name=KEYSTORE_PASSWORD::your_keystore_password"
        echo "::set-env name=KEY_ALIAS::your_key_alias"
        echo "::set-env name=KEY_PASSWORD::your_key_password"

      env:
        KEYSTORE_CONTENTS: ${{ secrets.KEYSTORE_CONTENTS }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        
    - name: Store Generated Keys as Secrets
      uses: actions/set-secret@v1
      with:
        secret: KEYSTORE_CONTENTS
        value: ${{ env.KEYSTORE_CONTENTS }}
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Build with Gradle
      run: ./gradlew assembleRelease

    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release/
        alias: ${{ secrets.KEY_ALIAS }}
        keystoreBase64: ${{ secrets.KEYSTORE_BASE64 }}
        keystorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
